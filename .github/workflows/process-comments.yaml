name: Process Giscus Contributions
on:
  discussion_comment:
    types: [created]

jobs:
  process:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 步骤1：安全解析Discussion评论
      - name: Parse Comment
        id: parse
        env:
          COMMENT_BODY: ${{ toJson(github.event.comment.body) }}
        run: |
          # 安全写入事件数据到临时文件
          echo "$COMMENT_BODY" > comment_body.json
          
          # 使用jq解析JSON内容
          if grep -q '!contribute' comment_body.json; then
            CONTENT=$(jq -r 'gsub("!contribute"; "")' comment_body.json | \
                     sed -e 's/"/\\"/g' -e 's/`/\\`/g')
            echo "CONTENT=${CONTENT}" >> $GITHUB_OUTPUT
            echo "HAS_CONTRIBUTION=true" >> $GITHUB_OUTPUT
          fi

      # 步骤2：更新Markdown文件
      - name: Update Markdown
        if: steps.parse.outputs.HAS_CONTRIBUTION == 'true'
        run: |
          TIMESTAMP=$(date +"%Y-%m-%d %H:%M")
          echo -e "\n\n---\n**贡献于 ${TIMESTAMP}**\n\n${{ steps.parse.outputs.CONTENT }}" \
            >> docs/college/major.md

      # 步骤3：自动创建PR
      - name: Create PR
        if: steps.parse.outputs.HAS_CONTRIBUTION == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Add user contribution from Discussion #${{ github.event.discussion.number }}"
          title: "📝 Update from Discussion #${{ github.event.discussion.number }}"
          body: |
            Automated update triggered by:
            - Discussion: #${{ github.event.discussion.number }}
            - Comment ID: ${{ github.event.comment.id }}
            Original content:
            ```markdown
            ${{ steps.parse.outputs.CONTENT }}
            ```
          branch: "discussion-contrib-${{ github.event.comment.id }}"